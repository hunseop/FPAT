# 새로운 구조 예시 - parameters.yaml
# 이 구조는 기존 복잡한 4개 섹션을 하나로 통합하고 CLI 명령어 정보도 추가

parameters:
  # 예시 파라미터 1: CTD 모드 설정
  - name: "ctd_mode"
    description: "Content-ID 확인 모드 설정"
    expected_value: "disabled"
    api_command: "show system setting ctd mode"
    cli_query_command: "show system setting | match ctd"
    cli_modify_command: "set system setting ctd-mode disabled"
    output_prefix: "CTD mode is:"

  # 예시 파라미터 2: Rematch 설정
  - name: "rematch"
    description: "애플리케이션 재매칭 설정"
    expected_value: "disabled"
    api_command: "show config running match rematch"
    cli_query_command: "show running application setting | match rematch"
    cli_modify_command: "set application setting rematch disabled"
    output_prefix: "Rematch:"

  # 예시 파라미터 3: 세션 타임아웃
  - name: "session_timeout"
    description: "세션 타임아웃 설정"
    expected_value: "3600"
    api_command: "show system setting session timeout"
    cli_query_command: "show system setting | match timeout"
    cli_modify_command: "set system setting session timeout 3600"
    output_prefix: "Session timeout:"

  # 예시 파라미터 4: 로그 레벨
  - name: "log_level"
    description: "시스템 로그 레벨"
    expected_value: "informational"
    api_command: "show system setting log level"
    cli_query_command: "show system setting | match log-level"
    cli_modify_command: "set system setting log-level informational"
    output_prefix: "Log level:"

# 장점:
# 1. 모든 정보가 한 곳에 집중됨
# 2. 새로운 파라미터 추가가 간단함
# 3. CLI 명령어 정보도 함께 관리
# 4. 기존 로직과 100% 호환됨 (어댑터를 통해)
# 5. 가독성과 유지보수성 향상